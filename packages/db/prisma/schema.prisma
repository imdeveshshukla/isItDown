// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String  
  urls websites[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model websites{
  id String @id @default(uuid())
  url String
  userId String
  user User @relation(fields: [userId],references: [id])
  validators validators[]
  ticks ticks[]   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model validators{
  id String @id @default(uuid())
  publicKey String //For Payment
  ipLocation String
  pendingPayments Int @default(0)
  lastPayment DateTime?
  websites websites[]
  ticks ticks[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 

model ticks{
  id String @id @default(uuid())
  status ValidatorStatus
  latency Float
  validatorId String
  validator validators @relation(fields: [validatorId],references: [id])
  websiteId String
  website websites @relation(fields: [websiteId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ValidatorStatus{
  ACTIVE
  INACTIVE
}



